'use strict';(function() {
  function h(a) {
    for(var b = 1, c = arguments.length;b < c;b++) {
      var d = arguments[b], e;
      for(e in d) {
        a[e] = d[e]
      }
    }
    return a
  }
  function p(a, b, c) {
    var d = -999999, e = 999999, g = !1;
    if(!0 === a || !1 === a || void 0 === a) {
      g = !!a
    }else {
      if(!0 === b || !1 === b || void 0 === b) {
        g = !!b, e = parseFloat(a), d = 0
      }else {
        if(!0 === c || !1 === c || void 0 === c) {
          d = parseFloat(a), e = parseFloat(b), g = !!c
        }
      }
    }
    a = Math.random() * (e - d) + d;
    return g ? Math.round(a) : a
  }
  function J(a, b) {
    return void 0 === a ? p(!1) : void 0 === b ? p(a, !1) : p(a, b, !1)
  }
  function m(a, b) {
    return void 0 === a ? p(!0) : void 0 === b ? p(a, !0) : p(a, b, !0)
  }
  function K() {
    return!!Math.round(Math.random())
  }
  function D(a) {
    return a || null
  }
  function u(a) {
    return"string" === typeof a ? a.split("").reverse().join("") : a.reverse()
  }
  function r(a) {
    return a ? void 0 !== a.length ? a[m(a.length - 1)] : 1 < arguments.length ? arguments[m(arguments.length - 1)] : a : a
  }
  function z(a, b) {
    b instanceof Array && (b = b.join(""));
    b = b.replace(/[\[\]\\]/g, "\\$&");
    return a.replace(RegExp("[" + b + "]", "g"), "\\$&")
  }
  function E(a, b) {
    b instanceof Array && (b = b.join(""));
    b = b.replace(/[\[\]\\]/g, "\\$&");
    return a.replace(RegExp("\\\\([" + b + "])", "g"), "$1")
  }
  function s(a) {
    return L(a, escape, Array.prototype.slice.apply(arguments).slice(1))
  }
  function L(a, b, c) {
    for(var d = 0, e = 0, g = "", f = 0, k = -1, l = c.length;f < a.length;) {
      if(0 > k) {
        for(var h = 0;h < l;h++) {
          if(a.substr(f, c[h][0].length) === c[h][0] && "\\" !== a[f - 1]) {
            k = h;
            break
          }
        }
      }
      0 <= k && a.substr(f, c[k][0].length) === c[k][0] && "\\" !== a[f - 1] && (c[k][0] !== c[k][1] || c[k][0] === c[k][1] && 0 === d) ? (0 === d && (g += a.slice(e, f), e = f + c[k][0].length), f += c[k][0].length, d++) : 0 <= k && 0 < d && a.substr(f, c[k][1].length) === c[k][1] && "\\" !== a[f - 1] ? (d--, 0 === d ? (g += c[k][0] + b(a.slice(e, f)) + c[k][1], e = f += c[k][1].length, k = -1) : f += c[k][1].length) : f++
    }
    return g += a.slice(e, a.lenght)
  }
  function A(a, b) {
    var c = void 0;
    if(isNaN(c = parseFloat(a))) {
      if(/^true$/i.test(a)) {
        return!0
      }
      if(/^false$/i.test(a)) {
        return!1
      }
      if(void 0 === a || 0 === a.length || "undefined" === a) {
        return
      }
      if("NaN" === a) {
        return NaN
      }
      if("null" === a) {
        return null
      }
      if(/^(?:"(?:[^"]|\\")*"|'(?:[^']|\\')*')$/.test(a)) {
        return a.slice(1, -1)
      }
      if("[" === a[0] && "]" === a[a.length - 1]) {
        a = a.slice(1, -1).trim();
        if(!a) {
          return[]
        }
        a = s(a, "{}", "[]");
        for(var d = a.split(","), c = [], e = 0;e < d.length;e++) {
          d[e] = unescape(d[e]).trim(), c[e] = A(d[e], b)
        }
        return c
      }
      if("{" === a[0] && "}" === a[a.length - 1]) {
        a = a.slice(1, -1);
        a = a.trim();
        if(!a) {
          return{}
        }
        a = s(a, "{}", "[]", "()", "''", '""');
        d = a.split(",");
        c = {};
        for(e = 0;e < d.length;e++) {
          d[e] = d[e].trim();
          var g = d[e].split(":"), f = g[0].trim(), g = g[1].trim();
          if("'" === f[0] && "'" === f[f.length - 1] || '"' === f[0] && '"' === f[f.length - 1]) {
            f = f.slice(1, -1)
          }
          g = unescape(g);
          c[f] = A(g, b)
        }
        return c
      }
      if(/[a-z_$@]/i.test(a[0])) {
        return new v(a, b)
      }
    }else {
      return c
    }
    throw Error("Can not recognize the param `" + a + "`");
  }
  function B(a, b) {
    if(void 0 === a) {
      return[null]
    }
    a = a.trim();
    a = s(a, "[]", "()", "{}", "''", '""');
    for(var c = a.split(/,[ ]?/), d = [], e = 0;e < c.length;e++) {
      d.push(A(unescape(c[e]), b))
    }
    return d
  }
  function q(a, b) {
    this.tokens = [];
    this.groups = [];
    this.options = h({}, q.defaults);
    this.context = b;
    a instanceof RegExp && (a = a.source);
    a = z(a, l);
    this.tokens.length = 1;
    a = this.flatten(a);
    this.orderGroups(a);
    this.tokens[0] = new w(a, 1, this, 0);
    return this
  }
  function t() {
    this._constructor.apply(this, arguments)
  }
  function w() {
    this._constructor.apply(this, arguments)
  }
  function M() {
    this._constructor.apply(this, arguments)
  }
  function x() {
    this._constructor.apply(this, arguments)
  }
  function F() {
    this._constructor.apply(this, arguments)
  }
  function N() {
    this._constructor.apply(this, arguments)
  }
  function v(a, b) {
    if(a) {
      this.context = b || h({}, n);
      this.chunkNames = [];
      this.chunkArguments = [];
      this.chunkTarget = void 0;
      a = s(a, "()", "''", '""');
      var c;
      c = a.match(this.plainChunkRE);
      if(!c) {
        throw Error("Cannot match initial call sequence chunk `" + a + "`");
      }
      this.chunkNames.push(unescape(c[1]));
      this.chunkArguments.push(B(unescape(c[2]), this.context));
      this.chunkTarget = this.context[this.chunkNames[0]];
      void 0 === this.chunkTarget && (this.chunkTarget = R[this.chunkNames[0]]);
      void 0 === this.chunkTarget && console.error("warning: no target found for chunk `" + this.chunkNames[0] + "` within context ", this.context);
      if(a = a.replace(c[0], "")) {
        for(var d = 10;(c = a.match(this.plainChunkRE) || a.match(this.keyChunkRE)) && d;) {
          this.chunkNames.push(unescape(c[1])), this.chunkArguments.push(B(unescape(c[2]), this.context)), a = a.replace(c[0], ""), d--
        }
      }
    }
  }
  function O(a, b) {
    this.context = h({}, n, b);
    var c = a.indexOf("(");
    0 < c ? (this.name = a.slice(0, c).trim(), this.params = B(a.slice(c).slice(1, -1), this.context)) : this.name = a.trim();
    this.fn = P[this.name];
    this.fn || (console.error("no filter `" + this.name + "` found. `none` is used instead."), this.fn = D)
  }
  function G(a, b) {
    this.context = {repeat:this.repeat, index:this.index};
    this.nestedContext = b || h({}, n);
    this.nestedContext.index = this.index;
    this.nestedContext.context = this.context;
    this.context.nestedContext = this.nestedContext;
    var c, d;
    "string" === typeof a[0] && /\{\{[ ]*repeat[ \(\),0-9]*\}\}/.test(a[0]) ? (d = a[0], c = a.slice(1)) : c = a;
    this.subjects = [];
    for(var e = 0;e < c.length;e++) {
      this.subjects.push(new y(c[e], this.nestedContext))
    }
    d || (d = "{{ repeat(" + this.subjects.length + ") }}");
    this.context.subjects = this.subjects;
    this.repeatEx = new q(d, this.context)
  }
  function y(a, b) {
    this.context = b || h({}, n, {populate:this.populate});
    this.model = this.recognize(a, this.context);
    this.stop = 0
  }
  function H(a) {
    return a.toString()[0].toUpperCase() + a.toString().slice(1).toLowerCase()
  }
  function Q(a, b) {
    switch(b) {
      case "js":
        var c = "";
        a = a.replace(/\\/g, "\\u005C");
        for(var d = 0;d < a.length;d++) {
          code = a.charCodeAt(d), 32 > code ? (code = code.toString(16).toUpperCase(), code = 2 > code.length ? "0" + code : code, c += "\\u00" + code) : c += a[d]
        }
        return c.replace(/&/g, "\\u0026").replace(/</g, "\\u003C").replace(/>/g, "\\u003E").replace(/\'/g, "\\u0027").replace(/"/g, "\\u0022").replace(/\=/g, "\\u003D").replace(/-/g, "\\u002D").replace(/;/g, "\\u003B");
      default:
        return a.replace(/&(?!amp;|lt;|gt;|quot;|#39;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
    }
  }
  var l = ["\u2985", "\u2986"], S = /(?:'[^']*'|"[^"]*")/g, C = ["{{", "}}"], I = {};
  q.defaults = {context:null, maxMultiplier:99};
  q.prototype = {setContext:function(a) {
    this.context = a
  }, getContext:function(a) {
    return this.context
  }, groupRE:/(\((?:\?\:)?[^\(\)]*\))(\?|\*|\+|\{[0-9, ]*\}|)/, reversiveDataRE:/(\?|\*|\+|\}[0-9, ]*\{|)(\}\}(?:[^](?!\{\{))*[^]\{\{)/, flatten:function(a) {
    var b, c = 0;
    a = a.replace(S, function(a) {
      return z(a, "{}")
    });
    c = 0;
    for(a = u(a);null !== (b = a.match(this.reversiveDataRE)) && 99 > c;) {
      var d = new F(E(u(b[2]), "{}"), u(b[1]), this);
      a = a.replace(b[0], l[1] + d.idx + l[0]);
      c++
    }
    a = u(a);
    for(c = 0;null !== (b = a.match(this.groupRE)) && 99 > c;) {
      d = new w(b[1], b[2], this), a = a.replace(b[0], l[0] + d.idx + l[1]), c++
    }
    return a
  }, groupRefRE:RegExp("(?:[^\\\\]|^)(" + l[0] + "([0-9]*)" + l[1] + ")"), orderGroups:function(a) {
    var b, c = 0;
    for(this.groups.length = 1;null !== (b = a.match(this.groupRefRE)) && c < this.tokens.length;) {
      var d = this.tokens[~~b[2]];
      d instanceof w && "(" === d.groupType && this.groups.push(d);
      a = a.replace(b[1], d.toString(!0));
      c++
    }
  }, populate:function() {
    var a = this.tokens[0].populate();
    return"string" === typeof a ? E(a, l) : a
  }, toString:function() {
    return this.tokens[0].toString()
  }, toJSON:function() {
    return this.tokens[0].toJSON()
  }};
  t.prototype = {_constructor:function(a, b, c, d) {
    this.expression = c;
    void 0 === d ? (this.idx = this.expression.tokens.length, this.expression.tokens.push(this)) : this.idx = d;
    this.multiplier = this.parseMultiplier(b);
    this.parse(a)
  }, parse:function(a) {
  }, populate:function() {
  }, toJSON:function() {
    return{token:"Token", alternatives:this.alternatives, multiplier:this.multiplier}
  }, toString:function() {
  }, singleMultiplierRe:/\{[ ]*([0-9])[ ]*\}/, diapMultiplierRe:/\{[ ]*([0-9]*)[ ]*,[ ]*([0-9]*)[ ]*\}/, parseMultiplier:function(a) {
    if("number" === typeof a) {
      return[a, a]
    }
    if(a instanceof Array) {
      return 2 === a.length ? a : [a[0], a[0]]
    }
    var b;
    return a ? "?" === a ? [0, 1] : "*" === a ? [0, this.expression.options.maxMultiplier] : "+" === a ? [1, this.expression.options.maxMultiplier] : (b = a.match(this.singleMultiplierRe)) ? [~~b[1], ~~b[1]] : (b = a.match(this.diapMultiplierRe)) ? [b[1] ? ~~b[1] : 0, b[2] ? ~~b[2] : this.expression.options.maxMultiplier] : [1, 1] : [1, 1]
  }, renderMultiplier:function() {
    return 1 === this.multiplier[0] && this.multiplier[1] === this.expression.options.maxMultiplier ? "+" : 0 === this.multiplier[0] && this.multiplier[1] === this.expression.options.maxMultiplier ? "*" : 0 === this.multiplier[0] && 1 === this.multiplier[1] ? "?" : this.multiplier[0] === this.multiplier[1] ? 1 === this.multiplier[0] ? "" : "{" + this.multiplier[0] + "}" : "{" + this.multiplier[0] + ", " + this.multiplier[1] + "}"
  }};
  h(w.prototype, t.prototype, {parse:function(a) {
    this.alternatives = [];
    this.groupString = a;
    this.groupType = a.match(/(\(\?\:|\(|)/)[1];
    a = a.slice(this.groupType.length, this.groupType ? -1 : a.length);
    a = a.split("|");
    for(var b = 0;b < a.length;b++) {
      this.alternatives.push(this.parseSequence(a[b]))
    }
  }, anyTokenRE:/^\[([^]*)\](\?|\*|\+|\{[0-9, ]*\}|)/, dataTokenRE:/^\{\{[ ]*([0-9.a-zA-Z$_,-\|\(\)]*)[ ]*\}\}(\?|\*|\+|\{[0-9, ]*\}|)/, specSymbolTokenRE:/^\\([^])(\?|\*|\+|\{[0-9, ]*\}|)/, groupStubTokenRE:RegExp("^" + l[0] + "([0-9]+)" + l[1]), stringTokenRE:RegExp("^((?:[^](?![\\*\\?\\+\\{\\[" + l[0] + "\\\\]|$))+[^]|[^](?=[\\*\\?\\+\\{\\[" + l[0] + "\\\\]|$))(\\?|\\*|\\+|\\{[0-9, ]*\\}|)"), parseSequence:function(a) {
    for(var b = [], c, d = 0;a && 9999 > d;) {
      if(c = a.match(this.anyTokenRE)) {
        b.push(new N(c[1], c[2], this.expression))
      }else {
        if(c = a.match(this.dataTokenRE)) {
          b.push(new F(c[1], c[2], this.expression))
        }else {
          if(c = a.match(this.specSymbolTokenRE)) {
            /[1-9]/.test(c[1]) ? b.push(new M(~~c[1], c[2], this.expression)) : b.push(new x("\\" + c[1], c[2], this.expression))
          }else {
            if(c = a.match(this.groupStubTokenRE)) {
              b.push(this.expression.tokens[c[1]])
            }else {
              if(c = a.match(this.stringTokenRE)) {
                c[2] ? (b.push(new x(c[1].slice(0, -1), 1, this.expression)), b.push(new x(c[1].slice(-1), c[2], this.expression))) : b.push(new x(c[1], c[2], this.expression))
              }else {
                b.push(a);
                break
              }
            }
          }
        }
      }
      a = a.slice(c[0].length);
      if(!a) {
        break
      }
      d++
    }
    return b
  }, toString:function(a) {
    for(var b = this.groupType, c = 0;c < this.alternatives.length;c++) {
      for(var d = this.alternatives[c], e = 0;e < d.length;e++) {
        b = a && d[e] instanceof w ? b + (l[0] + d[e].idx + l[1]) : b + d[e].toString()
      }
      c !== this.alternatives.length - 1 && (b += "|")
    }
    this.groupType && (b += ")");
    return b += this.renderMultiplier()
  }, toJSON:function() {
    result = {token:"GroupToken", alternatives:[], multiplier:this.multiplier};
    for(var a = 0;a < this.alternatives;a++) {
      for(var b = [], c = 0;c < this.alternatives[a].length;c++) {
        b.push(this.alternatives[a][c].toJSON())
      }
      result.alternatives.push(b)
    }
    return result
  }, populate:function(a) {
    var b = "";
    a = a || this.multiplier;
    a = m(a[0], a[1]);
    var c = r(this.alternatives);
    if(1 === a && 1 === c.length) {
      return c[0].populate()
    }
    for(var d = 0;d < a;d++) {
      for(var e = 0;e < c.length;e++) {
        b += c[e].populate()
      }
    }
    return b
  }});
  h(M.prototype, t.prototype, {parse:function(a) {
    this.groupId = ~~a
  }, toString:function() {
    return"\\" + this.groupId + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"GroupRefToken", groupId:this.groupId, multiplier:this.multiplier}
  }, populate:function() {
    for(var a = m(this.multiplier[0], this.multiplier[1], !0), b = "", c = 0;c < a;c++) {
      b += this.expression.groups[this.groupId].populate([1, 1])
    }
    return b
  }});
  h(x.prototype, t.prototype, {parse:function(a) {
    "\\" === a[0] ? (this.isUnsafe = 0 <= "\\{}[]()^?:.+*$,0123456789'\"|trs".indexOf(a[1]), this.alternatives = a.slice(1)) : this.alternatives = a
  }, populate:function(a) {
    var b = a || this.multiplier;
    a = "";
    for(var b = m(b[0], b[1]), c = 0;c < b;c++) {
      a += this.alternatives
    }
    return a
  }, toString:function() {
    return(this.isUnsafe ? "\\" : "") + this.alternatives + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"StringToken", alternatives:this.alternatives, multiplier:this.multiplier}
  }});
  h(F.prototype, t.prototype, {maxRecursionDepth:5, techSymbols:"|,()", parse:function(a) {
    this.dataString = a = a.slice(2, -2).trim();
    a = s(a, "''", '""');
    var b = a.split("|");
    a = unescape(b[0]).trim();
    b = b.slice(1);
    this.source = A(a, this.expression.context);
    this.filters = [];
    for(a = 0;a < b.length;a++) {
      this.filters.push(new O(unescape(b[a]), this.expression.context))
    }
  }, toString:function() {
    return"{{ " + this.dataString + " }}" + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"DataToken", source:this.source, filters:this.filters, multiplier:this.multiplier}
  }, populate:function(a) {
    var b = "";
    a = a || this.multiplier;
    a = m(a[0], a[1], !0);
    if(1 === a) {
      return this.getData()
    }
    for(var c = 0;c < a;c++) {
      b += this.getData()
    }
    return b
  }, getData:function() {
    var a;
    a = this.source instanceof v ? this.source.makeCall() : this.source;
    for(var b = 0;b < this.filters.length;b++) {
      a = this.filters[b].process(a)
    }
    return a
  }});
  h(N.prototype, t.prototype, {parse:function(a) {
    var b = a.match(/[^-]-[^-]/ig);
    if(b) {
      for(var c = 0;c < b.length;c++) {
        for(var d = b[c].charCodeAt(0), e = b[c].charCodeAt(2), g = "", f = Math.min(d, e), d = Math.max(d, e);f <= d;f++) {
          g += String.fromCharCode(f)
        }
        a = a.replace(b[c], g)
      }
    }
    this.alternatives = a
  }, populate:function(a) {
    var b = a || this.multiplier;
    a = "";
    for(var b = m(b[0], b[1], !0), c = 0;c < b;c++) {
      a += r(this.alternatives)
    }
    return a
  }, toString:function() {
    return"[" + this.alternatives + "]" + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"AnyToken", alternatives:this.alternatives.split(""), multiplier:this.multiplier}
  }});
  v.prototype = {plainChunkRE:/^([a-z_$][a-z0-9_$]*)[ ]?(?:\(([^\)]*)\))?\.?/i, keyChunkRE:/^\[['"]((?:[^](?!['"]))+[^]|[^])['"]\][ ]?(?:\([^\)]*\))?\.?/i, makeCall:function() {
    if(void 0 !== this.chunkTarget) {
      if("function" === typeof this.chunkTarget) {
        var a = this.chunkTarget.apply(this.context, this.getArgumentsData(this.chunkArguments[0]))
      }else {
        return this.chunkTarget
      }
      for(var b = 1;b < this.chunkNames.length;b++) {
        if("function" === typeof a[this.chunkNames[b]]) {
          var c = this.getArgumentsData(this.chunkArguments[b]), a = a[this.chunkNames[b]].apply(this.context, c)
        }else {
          a = a[this.chunkNames[b]]
        }
      }
      return a
    }
  }, getArgumentsData:function(a) {
    if(a) {
      for(var b = [], c = 0;c < a.length;c++) {
        a[c] instanceof v ? b.push(a[c].makeCall()) : b.push(a[c])
      }
      return b
    }
  }};
  O.prototype = {process:function(a) {
    return this.fn.apply(this, [a].concat(this.getParams()))
  }, getParams:function() {
    if(this.params) {
      for(var a = [], b = 0;b < this.params.length;b++) {
        this.params[b] instanceof v ? a.push(this.params[b].makeCall()) : a.push(this.params[b])
      }
      return a
    }
  }};
  G.prototype = {repeat:function(a, b, c) {
    if(this.subjects && void 0 !== this.subjects.length) {
      var d = 1, e = 1, g = !1;
      void 0 !== b && !0 !== b && !1 !== b || void 0 === a ? void 0 !== b && void 0 !== a && (e = b, d = a, g = !!c) : (d = e = a, g = !!b);
      a = void 0;
      d = m(d, e);
      e = [];
      b = this.subjects.length || 1;
      for(c = 0;c < d;c++) {
        var f = g ? r(this.subjects) : this.subjects[c % b];
        f && f.context ? (f.context.lastIndex = a, e.push(f.populate()), void 0 !== f.context.lastIndex && (void 0 === a && (a = f.context.lastIndex), a++)) : (e.push(f), console.log("wrong num"))
      }
      return e
    }
  }, index:function(a) {
    void 0 === this.lastIndex && (this.lastIndex = a || 0);
    return this.lastIndex
  }, populate:function() {
    return this.repeatEx.populate()
  }};
  y.prototype = {dataRegExp:RegExp([C[0], "[ ]*([a-zA-Z_$@][a-zA-Z_$@.0-9]*)[^", C[0], C[1], "]*", C[1]].join(""), "ig"), parseDescriptor:function(a) {
    a.match(this.dataRegExp);
    return[{title:"", description:"", tagline:"", categories:[], tags:[], pubdate:"", author:"Person"}]
  }, recognize:function(a) {
    return a instanceof Array ? new G(a, this.context) : "string" === typeof a ? new q(a, this.context) : a instanceof Object ? this.recognizeObject(a) : a
  }, recognizeObject:function(a) {
    if(!a) {
      return a
    }
    var b = {}, c;
    for(c in a) {
      b[c] = this.recognize(a[c])
    }
    return b
  }, populate:function(a) {
    var b = void 0;
    0 == arguments.length && (a = this.model);
    if(a instanceof q) {
      b = a.populate()
    }else {
      if(a instanceof y) {
        b = a.populate()
      }else {
        if(a instanceof G) {
          b = a.populate()
        }else {
          if(a instanceof Object) {
            if(19 <= this.stop) {
              console.error("Too big depth of population. Reassert your DataDescriptor");
              return
            }
            b = this.populateObject(a)
          }else {
            b = a
          }
        }
      }
    }
    return b
  }, populateObject:function(a) {
    var b = {};
    this.stop += 1;
    for(var c in a) {
      b[c] = this.populate(a[c])
    }
    return b
  }};
  var P = {capitalize:H, capfirst:H, truncatechars:function(a, b, c) {
    return a.slice(0, b) + (c || "")
  }, escape:Q, e:Q, uppper:function(a) {
    return a.toUpperCase()
  }, lower:function(a) {
    return a.toLowerCase()
  }, url_encode:escape, url_decode:unescape, striptags:function(a) {
    return a.replace(/<[^>]+>/g, "")
  }, sort:function(a, b) {
    var c = a.sort();
    b && (c = a.reverse());
    return c
  }, reverse:u, first:function(a) {
    return a[0]
  }, last:function(a) {
    return a[a.length - 1]
  }, uniq:function(a) {
    for(var b = [], c = 0;c < a.length;c++) {
      0 > b.indexOf(a[c]) && b.push(a[c])
    }
    return b
  }, join:function(a, b) {
    return a.join(b)
  }, title:function(a) {
    a = a.split(" ");
    for(var b = 0;b < a.length;b++) {
      a[b] = H(a[b])
    }
    return a.join(" ")
  }, addslashes:function(a) {
    return z(a, "'\"\\")
  }, replace:function(a, b, c, d) {
    return a.replace(RegExp(b, d), c)
  }, "default":function(a, b) {
    return a ? a : b
  }, any:r, random:r, add:function(a, b) {
    return a + b
  }, cut:function(a, b) {
    return a.replace(RegExp(b, "g"), "")
  }}, R = {"int":m, number:p, "float":J, bool:K, none:D, numeric:function(a, b, c) {
  }, firstName:function(a) {
  }, surname:function() {
  }, gender:function() {
  }, company:function() {
  }, phone:function(a) {
  }, email:function(a) {
  }, countriesList:function() {
  }, country:function() {
  }, state:function() {
  }, city:function() {
  }, street:function() {
  }, date:function(a) {
  }, lorem:function(a, b) {
  }}, n = {};
  window.imagine = n;
  n.o = {locale:"en_EN", badTags:"applet base basefont frame frameset head isindex link meta noframes noscript object param script style title".split(" ")};
  window.imagine && h(n.o, window.imagine);
  h(n, {refBrackets:l, extend:h, escapeWithin:s, unescapeWithin:function(a) {
    return L(a, unescape, Array.prototype.slice.apply(arguments).slice(1))
  }, escapeSymbols:z, unescapeSymbols:E, parseArguments:B, any:r, "int":m, "float":J, number:p, bool:K, replacements:function(a, b) {
    for(var c in b) {
      var d = c.replace(/[\?\*\+\\\{\}\[\]\(\)\,\.]/, function(a) {
        return"\\" + a
      });
      a = a.replace(RegExp(d, "g"), function() {
        return r(b[c])
      })
    }
    return a
  }, expression:function(a, b) {
    var c;
    I[a] ? (c = I[a], b && c.setContext(b)) : (c = new q(a, b), I[a] = c);
    return c.populate()
  }, sanitize:function(a, b) {
    var c = a;
    b = b || n.o.badTags;
    for(var d = 0;d < b.length;d++) {
      var e = ["<", b[d], "\\b(?:[^](?!<\\/", b[d], "))*[^]<\\/", b[d], "\\b[^>]*>"].join(""), e = RegExp(e, "ig"), g = ["<", b[d], "[^\\/>]*\\/>"].join(""), g = RegExp(g, "ig"), c = c.replace(e, ""), c = c.replace(g, "")
    }
    return c
  }, none:D, populate:function(a) {
    return(new y(a)).populate()
  }, fixed:function(a, b) {
    a = a.toString();
    var c = a.length;
    "string" === typeof b ? c = b.length : "number" === typeof b && (c = Math.round(b));
    if(c > a.length) {
      for(c -= a.length;c--;) {
        a = "0" + a
      }
    }else {
      a = a.slice(0, c)
    }
    return a
  }, index:function(a) {
    return a
  }, repeat:function() {
  }, Expression:q, DataDescriptor:y, filters:P})
})();

