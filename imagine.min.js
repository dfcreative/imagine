'use strict';(function() {
  function l(a) {
    for(var b = 1, c = arguments.length;b < c;b++) {
      var d = arguments[b], e;
      for(e in d) {
        a[e] = d[e]
      }
    }
    return a
  }
  function p(a, b, c) {
    var d = -999999, e = 999999, f = !1;
    if(!0 === a || !1 === a || void 0 === a) {
      f = !!a
    }else {
      if(!0 === b || !1 === b || void 0 === b) {
        f = !!b, e = parseFloat(a), d = 0
      }else {
        if(!0 === c || !1 === c || void 0 === c) {
          d = parseFloat(a), e = parseFloat(b), f = !!c
        }
      }
    }
    a = Math.random() * (e - d) + d;
    return f ? Math.round(a) : a
  }
  function m(a, b) {
    return void 0 === a ? p(!0) : void 0 === b ? p(a, !0) : p(a, b, !0)
  }
  function K(a) {
    return a || null
  }
  function u(a) {
    return"string" === typeof a ? a.split("").reverse().join("") : a.reverse()
  }
  function q(a) {
    return a ? void 0 !== a.length ? a[m(a.length - 1)] : 1 < arguments.length ? arguments[m(arguments.length - 1)] : a : a
  }
  function z(a) {
    if(A[a]) {
      return A[a]
    }
    A[a] = new r(a);
    return A[a]
  }
  function B(a, b) {
    b instanceof Array && (b = b.join(""));
    b = b.replace(/[\[\]\\]/g, "\\$&");
    return a.replace(RegExp("[" + b + "]", "g"), "\\$&")
  }
  function G(a, b) {
    b instanceof Array && (b = b.join(""));
    b = b.replace(/[\[\]\\]/g, "\\$&");
    return a.replace(RegExp("\\\\([" + b + "])", "g"), "$1")
  }
  function s(a) {
    return L(a, escape, Array.prototype.slice.apply(arguments).slice(1))
  }
  function L(a, b, c) {
    for(var d = 0, e = 0, f = "", g = 0, h = -1, k = c.length;g < a.length;) {
      if(0 > h) {
        for(var l = 0;l < k;l++) {
          if(a.substr(g, c[l][0].length) === c[l][0] && "\\" !== a[g - 1]) {
            h = l;
            break
          }
        }
      }
      0 <= h && a.substr(g, c[h][0].length) === c[h][0] && "\\" !== a[g - 1] && (c[h][0] !== c[h][1] || c[h][0] === c[h][1] && 0 === d) ? (0 === d && (f += a.slice(e, g), e = g + c[h][0].length), g += c[h][0].length, d++) : 0 <= h && 0 < d && a.substr(g, c[h][1].length) === c[h][1] && "\\" !== a[g - 1] ? (d--, 0 === d ? (f += c[h][0] + b(a.slice(e, g)) + c[h][1], e = g += c[h][1].length, h = -1) : g += c[h][1].length) : g++
    }
    return f += a.slice(e, a.lenght)
  }
  function C(a) {
    var b = void 0;
    if(isNaN(b = parseFloat(a))) {
      if(/^true$/i.test(a)) {
        return!0
      }
      if(/^false$/i.test(a)) {
        return!1
      }
      if(void 0 === a || 0 === a.length || "undefined" === a) {
        return
      }
      if("NaN" === a) {
        return NaN
      }
      if("null" === a) {
        return null
      }
      if(/^(?:"(?:[^"]|\\")*"|'(?:[^']|\\')*')$/.test(a)) {
        return a.slice(1, -1)
      }
      if("[" === a[0] && "]" === a[a.length - 1]) {
        a = a.slice(1, -1).trim();
        if(!a) {
          return[]
        }
        a = s(a, "{}", "[]");
        var c = a.split(","), b = [];
        for(a = 0;a < c.length;a++) {
          c[a] = unescape(c[a]).trim(), b[a] = C(c[a])
        }
        return b
      }
      if("{" === a[0] && "}" === a[a.length - 1]) {
        a = a.slice(1, -1);
        a = a.trim();
        if(!a) {
          return{}
        }
        a = s(a, "{}", "[]", "()", "''", '""');
        c = a.split(",");
        b = {};
        for(a = 0;a < c.length;a++) {
          c[a] = c[a].trim();
          var d = c[a].split(":"), e = d[0].trim(), d = d[1].trim();
          if("'" === e[0] && "'" === e[e.length - 1] || '"' === e[0] && '"' === e[e.length - 1]) {
            e = e.slice(1, -1)
          }
          d = unescape(d);
          b[e] = C(d)
        }
        return b
      }
      if(/[a-z_$@]/i.test(a[0])) {
        return b = a, H[b] || (H[b] = new v(b)), b = H[b], b
      }
    }else {
      return b
    }
    throw Error("Can not recognize the param `" + a + "`");
  }
  function D(a) {
    if(void 0 === a) {
      return[null]
    }
    a = a.trim();
    a = s(a, "[]", "()", "{}", "''", '""');
    a = a.split(/,[ ]?/);
    for(var b = [], c = 0;c < a.length;c++) {
      b.push(C(unescape(a[c])))
    }
    return b
  }
  function I(a) {
    return a.toString()[0].toUpperCase() + a.toString().slice(1).toLowerCase()
  }
  function M(a, b) {
    switch(b) {
      case "js":
        var c = "";
        a = a.replace(/\\/g, "\\u005C");
        for(var d = 0;d < a.length;d++) {
          var e = a.charCodeAt(d);
          32 > e ? (e = e.toString(16).toUpperCase(), e = 2 > e.length ? "0" + e : e, c += "\\u00" + e) : c += a[d]
        }
        return c.replace(/&/g, "\\u0026").replace(/</g, "\\u003C").replace(/>/g, "\\u003E").replace(/\'/g, "\\u0027").replace(/"/g, "\\u0022").replace(/\=/g, "\\u003D").replace(/-/g, "\\u002D").replace(/;/g, "\\u003B");
      default:
        return a.replace(/&(?!amp;|lt;|gt;|quot;|#39;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
    }
  }
  function r(a) {
    this.tokens = [];
    this.groups = [];
    this.options = l({}, r.defaults);
    a instanceof RegExp && (a = a.source, a = a.replace(/\\'/g, "'"), a = a.replace(/\\"/g, '"'), a = a.replace(/\\t/g, "\t"), a = a.replace(/\\b/g, "\b"), a = a.replace(/\\n/g, "\n"), a = a.replace(/\\r/g, "\r"), a = a.replace(/\\f/g, "\f"), a = a.replace(/\\([^])/g, "$1"));
    a = B(a, k);
    this.tokens.length = 1;
    a = this.flatten(a);
    this.orderGroups(a);
    this.tokens[0] = new w(a, 1, this, 0);
    return this
  }
  function t() {
    this._constructor.apply(this, arguments)
  }
  function w() {
    this._constructor.apply(this, arguments)
  }
  function N() {
    this._constructor.apply(this, arguments)
  }
  function x() {
    this._constructor.apply(this, arguments)
  }
  function J() {
    this._constructor.apply(this, arguments)
  }
  function O() {
    this._constructor.apply(this, arguments)
  }
  function v(a) {
    if(a) {
      this.chunkNames = [];
      this.chunkArguments = [];
      a = s(a, "()", "''", '""');
      var b;
      b = a.match(this.plainChunkRE);
      if(!b) {
        throw Error("Cannot match initial call sequence chunk `" + a + "`");
      }
      this.chunkNames.push(unescape(b[1]));
      this.chunkArguments.push(D(unescape(b[2])));
      if(a = a.replace(b[0], "")) {
        for(var c = 10;(b = a.match(this.plainChunkRE) || a.match(this.keyChunkRE)) && c;) {
          this.chunkNames.push(unescape(b[1])), this.chunkArguments.push(D(unescape(b[2]))), a = a.replace(b[0], ""), c--
        }
      }
    }
  }
  function P(a) {
    var b = a.indexOf("(");
    0 < b ? (this.name = a.slice(0, b).trim(), this.params = D(a.slice(b).slice(1, -1))) : this.name = a.trim();
    this.fn = n.filters[this.name];
    this.fn || (console.error("no filter `" + this.name + "` found. `none` is used instead."), this.fn = K)
  }
  function E(a) {
    this.repeatContext = {repeat:this.repeat};
    this.subjectContext = l({}, n, {lastIndex:void 0, index:this.index});
    var b;
    "string" === typeof a[0] && /\{\{[ ]*repeat[ \(\),0-9]*\}\}/.test(a[0]) && (b = a[0], a = a.slice(1));
    this.subjects = [];
    for(var c = 0;c < a.length;c++) {
      this.subjects.push(new y(a[c]))
    }
    b || (b = "{{ repeat(" + this.subjects.length + ") }}");
    this.repeatContext.subjects = this.subjects;
    this.repeatContext.subjectContext = this.subjectContext;
    this.repeatEx = z(b)
  }
  function y(a) {
    this.model = this.recognize(a);
    this.stop = 0
  }
  var k = ["\u2985", "\u2986"], Q = /(?:'[^']*'|"[^"]*")/g, F = ["{{", "}}"], A = {}, H = {}, R = "applet base basefont frame frameset head isindex link meta noframes noscript object param script style title".split(" "), n = function(a, b) {
    return"string" === typeof a || a instanceof RegExp ? z(a).populate(b) : a instanceof Array ? (new E(a)).populate(b) : (new y(a)).populate(b)
  };
  l(n, {options:{locale:"en"}, any:q, "int":m, "float":function(a, b) {
    return void 0 === a ? p(!1) : void 0 === b ? p(a, !1) : p(a, b, !1)
  }, number:p, bool:function() {
    return!!Math.round(Math.random())
  }, none:K, index:function(a) {
    console.log("bad index");
    return a
  }, repeat:function() {
  }, filters:{capitalize:I, capfirst:I, truncatechars:function(a, b, c) {
    return a.slice(0, b) + (c || "")
  }, escape:M, e:M, uppper:function(a) {
    return a.toUpperCase()
  }, lower:function(a) {
    return a.toLowerCase()
  }, url_encode:escape, url_decode:unescape, striptags:function(a) {
    return a.replace(/<[^>]+>/g, "")
  }, sanitize:function(a, b) {
    var c = a;
    b = b || R;
    for(var d = 0;d < b.length;d++) {
      var e = ["<", b[d], "\\b(?:[^](?!<\\/", b[d], "))*[^]<\\/", b[d], "\\b[^>]*>"].join(""), e = RegExp(e, "ig"), f = ["<", b[d], "[^\\/>]*\\/>"].join(""), f = RegExp(f, "ig"), c = c.replace(e, ""), c = c.replace(f, "")
    }
    return c
  }, sort:function(a, b) {
    var c = a.sort();
    b && (c = a.reverse());
    return c
  }, reverse:u, first:function(a) {
    return a[0]
  }, last:function(a) {
    return a[a.length - 1]
  }, uniq:function(a) {
    for(var b = [], c = 0;c < a.length;c++) {
      0 > b.indexOf(a[c]) && b.push(a[c])
    }
    return b
  }, join:function(a, b) {
    return a.join(b)
  }, title:function(a) {
    a = a.split(" ");
    for(var b = 0;b < a.length;b++) {
      a[b] = I(a[b])
    }
    return a.join(" ")
  }, addslashes:function(a) {
    return B(a, "'\"\\")
  }, replace:function(a, b, c, d) {
    return a.replace(RegExp(b, d), c)
  }, slice:function(a, b, c) {
    return a.slice(b, c)
  }, fixed:function(a, b) {
    a = a.toString();
    var c = a.length;
    "string" === typeof b ? c = b.length : "number" === typeof b && (c = Math.round(b));
    if(c > a.length) {
      for(c -= a.length;c--;) {
        a = "0" + a
      }
    }else {
      a = a.slice(0, c)
    }
    return a
  }, min:Math.max, max:Math.min, "default":function(a, b) {
    return a ? a : b
  }, any:q, random:q, add:function(a, b) {
    return a + b
  }, cut:function(a, b) {
    return a.replace(RegExp(b, "g"), "")
  }}, util:{refBrackets:k, extend:l, escapeWithin:s, unescapeWithin:function(a) {
    return L(a, unescape, Array.prototype.slice.apply(arguments).slice(1))
  }, escapeSymbols:B, unescapeSymbols:G, parseArguments:D, expression:z, replacements:function(a, b) {
    for(var c in b) {
      var d = c.replace(/[\?\*\+\\\{\}\[\]\(\)\,\.]/, function(a) {
        return"\\" + a
      });
      a = a.replace(RegExp(d, "g"), function() {
        return q(b[c])
      })
    }
    return a
  }, Expression:r, DataDescriptor:y}});
  window.imagine = n;
  r.defaults = {context:null, maxMultiplier:99};
  r.prototype = {groupRE:/(\((?:\?\:)?[^\(\)]*\))(\?|\*|\+|\{[0-9, ]*\}|)/, reversiveDataRE:/(\?|\*|\+|\}[0-9, ]*\{|)(\}\}(?:[^](?!\{\{))*[^]\{\{)/, flatten:function(a) {
    var b, c = 0;
    a = a.replace(Q, function(a) {
      return B(a, "{}")
    });
    c = 0;
    for(a = u(a);null !== (b = a.match(this.reversiveDataRE)) && 99 > c;) {
      var d = new J(G(u(b[2]), "{}"), u(b[1]), this);
      a = a.replace(b[0], k[1] + d.idx + k[0]);
      c++
    }
    a = u(a);
    for(c = 0;null !== (b = a.match(this.groupRE)) && 99 > c;) {
      d = new w(b[1], b[2], this), a = a.replace(b[0], k[0] + d.idx + k[1]), c++
    }
    return a
  }, groupRefRE:RegExp("(?:[^\\\\]|^)(" + k[0] + "([0-9]*)" + k[1] + ")"), orderGroups:function(a) {
    var b, c = 0;
    for(this.groups.length = 1;null !== (b = a.match(this.groupRefRE)) && c < this.tokens.length;) {
      var d = this.tokens[~~b[2]];
      d instanceof w && "(" === d.groupType && this.groups.push(d);
      a = a.replace(b[1], d.toString(!0));
      c++
    }
  }, populate:function(a) {
    a = this.tokens[0].populate(a || n);
    return"string" === typeof a ? G(a, k) : a
  }, toString:function() {
    return this.tokens[0].toString()
  }, toJSON:function() {
    return this.tokens[0].toJSON()
  }};
  t.prototype = {_constructor:function(a, b, c, d) {
    this.expression = c;
    void 0 === d ? (this.idx = this.expression.tokens.length, this.expression.tokens.push(this)) : this.idx = d;
    this.multiplier = this.parseMultiplier(b);
    this.parse(a)
  }, parse:function(a) {
  }, populate:function(a) {
  }, toJSON:function() {
    return{token:"Token", alternatives:this.alternatives, multiplier:this.multiplier}
  }, toString:function() {
  }, singleMultiplierRe:/\{[ ]*([0-9])[ ]*\}/, diapMultiplierRe:/\{[ ]*([0-9]*)[ ]*,[ ]*([0-9]*)[ ]*\}/, parseMultiplier:function(a) {
    if("number" === typeof a) {
      return[a, a]
    }
    if(a instanceof Array) {
      return 2 === a.length ? a : [a[0], a[0]]
    }
    var b;
    return a ? "?" === a ? [0, 1] : "*" === a ? [0, this.expression.options.maxMultiplier] : "+" === a ? [1, this.expression.options.maxMultiplier] : (b = a.match(this.singleMultiplierRe)) ? [~~b[1], ~~b[1]] : (b = a.match(this.diapMultiplierRe)) ? [b[1] ? ~~b[1] : 0, b[2] ? ~~b[2] : this.expression.options.maxMultiplier] : [1, 1] : [1, 1]
  }, renderMultiplier:function() {
    return 1 === this.multiplier[0] && this.multiplier[1] === this.expression.options.maxMultiplier ? "+" : 0 === this.multiplier[0] && this.multiplier[1] === this.expression.options.maxMultiplier ? "*" : 0 === this.multiplier[0] && 1 === this.multiplier[1] ? "?" : this.multiplier[0] === this.multiplier[1] ? 1 === this.multiplier[0] ? "" : "{" + this.multiplier[0] + "}" : "{" + this.multiplier[0] + ", " + this.multiplier[1] + "}"
  }};
  l(w.prototype, t.prototype, {parse:function(a) {
    this.alternatives = [];
    this.groupString = a;
    this.groupType = a.match(/(\(\?\:|\(|)/)[1];
    a = a.slice(this.groupType.length, this.groupType ? -1 : a.length);
    a = a.split("|");
    for(var b = 0;b < a.length;b++) {
      this.alternatives.push(this.parseSequence(a[b]))
    }
  }, anyTokenRE:/^\[([^]*)\](\?|\*|\+|\{[0-9, ]*\}|)/, dataTokenRE:/^\{\{[ ]*([0-9.a-zA-Z$_,-\|\(\)]*)[ ]*\}\}(\?|\*|\+|\{[0-9, ]*\}|)/, specSymbolTokenRE:/^\\([^])(\?|\*|\+|\{[0-9, ]*\}|)/, groupStubTokenRE:RegExp("^" + k[0] + "([0-9]+)" + k[1]), stringTokenRE:RegExp("^((?:[^](?![\\*\\?\\+\\{\\[" + k[0] + "\\\\]|$))+[^]|[^](?=[\\*\\?\\+\\{\\[" + k[0] + "\\\\]|$))(\\?|\\*|\\+|\\{[0-9, ]*\\}|)"), parseSequence:function(a) {
    for(var b = [], c, d = 0;a && 9999 > d;) {
      if(c = a.match(this.anyTokenRE)) {
        b.push(new O(c[1], c[2], this.expression))
      }else {
        if(c = a.match(this.dataTokenRE)) {
          b.push(new J(c[1], c[2], this.expression))
        }else {
          if(c = a.match(this.specSymbolTokenRE)) {
            /[1-9]/.test(c[1]) ? b.push(new N(~~c[1], c[2], this.expression)) : b.push(new x("\\" + c[1], c[2], this.expression))
          }else {
            if(c = a.match(this.groupStubTokenRE)) {
              b.push(this.expression.tokens[c[1]])
            }else {
              if(c = a.match(this.stringTokenRE)) {
                c[2] ? (b.push(new x(c[1].slice(0, -1), 1, this.expression)), b.push(new x(c[1].slice(-1), c[2], this.expression))) : b.push(new x(c[1], c[2], this.expression))
              }else {
                b.push(a);
                break
              }
            }
          }
        }
      }
      a = a.slice(c[0].length);
      if(!a) {
        break
      }
      d++
    }
    return b
  }, toString:function(a) {
    for(var b = this.groupType, c = 0;c < this.alternatives.length;c++) {
      for(var d = this.alternatives[c], e = 0;e < d.length;e++) {
        b = a && d[e] instanceof w ? b + (k[0] + d[e].idx + k[1]) : b + d[e].toString()
      }
      c !== this.alternatives.length - 1 && (b += "|")
    }
    this.groupType && (b += ")");
    return b += this.renderMultiplier()
  }, toJSON:function() {
    result = {token:"GroupToken", alternatives:[], multiplier:this.multiplier};
    for(var a = 0;a < this.alternatives;a++) {
      for(var b = [], c = 0;c < this.alternatives[a].length;c++) {
        b.push(this.alternatives[a][c].toJSON())
      }
      result.alternatives.push(b)
    }
    return result
  }, populate:function(a, b) {
    var c = "", d = b || this.multiplier, d = m(d[0], d[1]), e = q(this.alternatives);
    if(1 === d && 1 === e.length) {
      return e[0].populate(a)
    }
    for(var f = 0;f < d;f++) {
      for(var g = 0;g < e.length;g++) {
        c += e[g].populate(a)
      }
    }
    return c
  }});
  l(N.prototype, t.prototype, {parse:function(a) {
    this.groupId = ~~a
  }, toString:function() {
    return"\\" + this.groupId + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"GroupRefToken", groupId:this.groupId, multiplier:this.multiplier}
  }, populate:function(a) {
    for(var b = m(this.multiplier[0], this.multiplier[1], !0), c = "", d = 0;d < b;d++) {
      c += this.expression.groups[this.groupId].populate(a, [1, 1])
    }
    return c
  }});
  l(x.prototype, t.prototype, {parse:function(a) {
    "\\" === a[0] ? (this.isUnsafe = 0 <= "\\{}[]()^?:.+*$,0123456789'\"|trs".indexOf(a[1]), this.alternatives = a.slice(1)) : this.alternatives = a
  }, populate:function(a, b) {
    for(var c = b || this.multiplier, d = "", c = m(c[0], c[1]), e = 0;e < c;e++) {
      d += this.alternatives
    }
    return d
  }, toString:function() {
    return(this.isUnsafe ? "\\" : "") + this.alternatives + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"StringToken", alternatives:this.alternatives, multiplier:this.multiplier}
  }});
  l(J.prototype, t.prototype, {maxRecursionDepth:5, techSymbols:"|,()", parse:function(a) {
    this.dataString = a = a.slice(2, -2).trim();
    a = s(a, "''", '""');
    var b = a.split("|");
    a = unescape(b[0]).trim();
    b = b.slice(1);
    this.source = C(a);
    this.filters = [];
    for(a = 0;a < b.length;a++) {
      this.filters.push(new P(unescape(b[a])))
    }
  }, toString:function() {
    return"{{ " + this.dataString + " }}" + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"DataToken", source:this.source, filters:this.filters, multiplier:this.multiplier}
  }, populate:function(a, b) {
    var c, d = b || this.multiplier, d = m(d[0], d[1], !0);
    if(1 === d) {
      c = this.getData(a)
    }else {
      for(var e = 0;e < d;e++) {
        c += this.getData(a)
      }
    }
    return c
  }, getData:function(a) {
    var b;
    b = this.source instanceof v ? this.source.makeCall(a) : this.source;
    for(var c = 0;c < this.filters.length;c++) {
      b = this.filters[c].process(b, a)
    }
    return b
  }});
  l(O.prototype, t.prototype, {parse:function(a) {
    var b = a.match(/[^-]-[^-]/ig);
    if(b) {
      for(var c = 0;c < b.length;c++) {
        for(var d = b[c].charCodeAt(0), e = b[c].charCodeAt(2), f = "", g = Math.min(d, e), d = Math.max(d, e);g <= d;g++) {
          f += String.fromCharCode(g)
        }
        a = a.replace(b[c], f)
      }
    }
    this.alternatives = a
  }, populate:function(a, b) {
    for(var c = b || this.multiplier, d = "", c = m(c[0], c[1], !0), e = 0;e < c;e++) {
      d += q(this.alternatives)
    }
    return d
  }, toString:function() {
    return"[" + this.alternatives + "]" + this.renderMultiplier()
  }, toJSON:function() {
    return{token:"AnyToken", alternatives:this.alternatives.split(""), multiplier:this.multiplier}
  }});
  v.prototype = {plainChunkRE:/^([a-z_$][a-z0-9_$]*)[ ]?(?:\(([^\)]*)\))?\.?/i, keyChunkRE:/^\[['"]((?:[^](?!['"]))+[^]|[^])['"]\][ ]?(?:\([^\)]*\))?\.?/i, makeCall:function(a) {
    a = a || n;
    var b = a[this.chunkNames[0]];
    void 0 === b && (b = n[this.chunkNames[0]]);
    if(void 0 === b) {
      console.error("warning: no target found for chunk `" + this.chunkNames[0] + "` within context ", a)
    }else {
      if("function" === typeof b) {
        b = b.apply(a, this.getArgumentsData(this.chunkArguments[0], a))
      }else {
        return b
      }
      for(var c = 1;c < this.chunkNames.length;c++) {
        if("function" === typeof b[this.chunkNames[c]]) {
          var d = this.getArgumentsData(this.chunkArguments[c], a), b = b[this.chunkNames[c]].apply(a, d)
        }else {
          b = b[this.chunkNames[c]]
        }
      }
      return b
    }
  }, getArgumentsData:function(a, b) {
    if(a) {
      for(var c = [], d = 0;d < a.length;d++) {
        a[d] instanceof v ? c.push(a[d].makeCall(b)) : c.push(a[d])
      }
      return c
    }
  }};
  P.prototype = {process:function(a, b) {
    return this.fn.apply(this, [a].concat(this.getParams(b)))
  }, getParams:function(a) {
    if(this.params) {
      for(var b = [], c = 0;c < this.params.length;c++) {
        this.params[c] instanceof v ? b.push(this.params[c].makeCall(a)) : b.push(this.params[c])
      }
      return b
    }
  }};
  E.prototype = {repeat:function(a, b, c) {
    if(this.subjects && void 0 !== this.subjects.length) {
      var d = 1, e = 1, f = !1;
      void 0 !== b && !0 !== b && !1 !== b || void 0 === a ? void 0 !== b && void 0 !== a && (e = b, d = a, f = !!c) : (d = e = a, f = !!b);
      a = m(d, e);
      this.subjectContext.lastIndex = void 0;
      b = [];
      c = this.subjects.length || 1;
      for(d = 0;d < a;d++) {
        (e = f ? q(this.subjects) : this.subjects[d % c]) ? (b.push(e.populate(this.subjectContext)), void 0 !== this.subjectContext.lastIndex && this.subjectContext.lastIndex++) : b.push(e)
      }
      return b
    }
  }, index:function(a) {
    void 0 === this.lastIndex && (this.lastIndex = a || 0);
    return this.lastIndex
  }, populate:function(a) {
    return this.repeatEx.populate(this.repeatContext)
  }};
  y.prototype = {dataRegExp:RegExp([F[0], "[ ]*([a-zA-Z_$@][a-zA-Z_$@.0-9]*)[^", F[0], F[1], "]*", F[1]].join(""), "ig"), parseDescriptor:function(a) {
    a.match(this.dataRegExp);
    return[{title:"", description:"", tagline:"", categories:[], tags:[], pubdate:"", author:"Person"}]
  }, recognize:function(a) {
    return a instanceof Array ? new E(a) : "string" === typeof a || a instanceof RegExp ? z(a) : a instanceof Object ? this.recognizeObject(a) : a
  }, recognizeObject:function(a) {
    if(!a || "function" === typeof a) {
      return a
    }
    var b = {}, c;
    for(c in a) {
      b[c] = this.recognize(a[c])
    }
    return b
  }, populate:function(a) {
    return this.populateModel(a || n, this.model)
  }, populateModel:function(a, b) {
    var c = void 0;
    if(b instanceof r) {
      c = b.populate(a)
    }else {
      if(b instanceof y) {
        c = b.populate(a)
      }else {
        if(b instanceof E) {
          c = b.populate(a)
        }else {
          if(b instanceof Object) {
            if(19 <= this.stop) {
              console.error("Too big depth of population. Reassert your DataDescriptor");
              return
            }
            c = this.populateObject(a, b)
          }else {
            c = b
          }
        }
      }
    }
    return c
  }, populateObject:function(a, b) {
    if("function" === typeof b) {
      return b.apply(a)
    }
    var c = {};
    this.stop += 1;
    for(var d in b) {
      c[d] = this.populateModel(a, b[d])
    }
    return c
  }}
})();

