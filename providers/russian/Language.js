var Language = {
	alphabete: "абвгдеёжзийклмнопрстуфхцчшщъыьэюя",
	vowels: "аеёиоуыэюя",
	consonants: {
		all: "бвгджзйклмнпрстфхцчшщ",
		voiced: "бвгджзлмнр",
		unvoiced: "пфктшсхчщ",
		sibiliant: "жшчщ",
		soft: "бвгдзйклмнпрстфхчщ",
		softRE: /[бвгдзйклмнпрстфхчщ][иеёюя]$/,
		hard: "бвгджзклмнпрстфхцш",
		hardRE: /[бвгджзклмнпрстфхцш][аоуыэ]$/
	},

	prepositions: "а-ля|без|без ведома|безо|благодаря|близ|близко от|в|в виде|в зависимости от|в интересах|в качестве|в лице|в отличие от|в отношении|в пользу|в преддверии|в продолжение|в результате|в роли|в связи с|в силу|в случае|в соответствии с|в течение|в целях|вблизи|ввиду|вглубь|вдоль|вдоль по|взамен|включая|вместо|вне|внизу|внутри|внутрь|во|во имя|возле|вокруг|вопреки|впереди|впредь до|вразрез|вроде|вслед|вслед за|вследствие|для|для-ради|до|за|за вычетом|за исключением|за счёт|заместо|из|из-за|из-под|изнутри|изо|исходя из|к|ко|кроме|кругом|лицом к лицу с|меж|между|мимо|на|на благо|на виду у|на глазах у|на предмет|наверху|навстречу|над|надо|назад|накануне|наперекор|наперерез|наподобие|напротив|наряду с|насупротив|насчёт|начиная с|не без|не в|не за|не считая|невзирая на|недалеко от|независимо от|несмотря на|ниже|о|об|обо|обок|около|окромя|округ|опосля|от|от имени|от лица|относительно|ото|перед|передо|по|по линии|по мере|по направлению к|по отношению к|по поводу|по причине|по случаю|по сравнению с|по-за|по-над|по-под|поблизости от|поверх|под|под видом|под эгидой|подле|подо|подобно|позади|помимо|поперёк|порядка|посередине|посередь|после|посреди|посредине|посредством|пред|предо|прежде|при|при помощи|применительно к|про|против|путём|ради|рядом с|с|с ведома|с помощью|с точки зрения|с целью|сверх|свыше|сзади|сквозь|скрозь|следом за|смотря по|снизу|со|согласно|спустя|среди|средь|сродни|судя по|супротив|через|чрез".split("|"),

	pronoun: "иже|какой-либо|когда|кое-кто|кое-что|кой|кто|кто-либо|многий|мя|насколько|немногий|нешто|никой|ничегошеньки|сё|такой-то|то же|тот-то|чё|чево|чей-либо|чей-нибудь|чей-то|шо|эта|себе|себя|собой|собою|каков|какой|кем|кой|ком|кому|который|кто|нахуя|сколько|чей|чему|что|вы|Вы|мы|он|она|оне|они|оно|ты|я|иной|какой|какой-то|кое-какой|кое-кто|кое-чей|кое-что|кой-какой|кой-кто|кто-либо|кто-нибудь|кто-то|куда-нибудь|некоторый|некто|нечто|что-либо|что-нибудь|что-то|весь|всякий|каждый|любой|сам|самый|этакий|другой|иной|какой|кой|который|кто|что|некем|некого|некому|нечего|нечем|нечему|никакой|никто|ничего|ничей|ничем|ничему|ничто|ваш|её|его|их|ихний|моё|мой|моя|наш|свой|твой|чей|сам|сей|сие|сии|сия|столько|та|таков|такой|то|тот|ту|эдакий|эта|этакий|эти|это|этот|как|каков|какой|который|каков|какой|сам|данный|каждый|некоторый|самый|Христов|весь|всякий|некий|другой|какой|какой-нибудь|никакой|сякой|такой|попугаячий".split("|"),

	prefixes: [
		"вне|внутри|все|испод|кое|кой|меж|междо|между|надо|наи|небез|небес|ни|низо|нис|обез|обес|около|подo|поза|после|предо|преди|противо|разо|рас|сверх|среди|сыз|тре|чрез", //difficult ones
		"во|в|взо|вы|до|за|изо|из|на|над|не|недо|обо|об|ото|от|о|па|пере|подо|под|по|пра|пред|про|разо|со|су|с|у", //add "о" somewhere by the rule
		"без|бес|вз|вс|возо|воз|вос|из|ис|низ|нис|раз|рас|роз|рос|через|черес", //add "с" everywhere by the rule
		"пре|при"
	].join("|"),

	foreignPrefixes: [
		"ана|гипер|гипо|квази|мета|орто|пара|прото|нео|а", //greek
		"суб|экс|ин|супер|транс|пост", //latin
		"анти|архи|би|вице|гипер|дез|де|дис|им|интер|ир|квази|контр|макро|микро|обер|пост|пре|прото|псевдо|ре|суб|супер|транс|ультра|экзо|экс|экстра" //other
	].join("|"),	

	siPrefixes: [
		"дека|гекто|кило|мега|гига|тера|пета|экса|зетта|иотта", //SI up
		"деци|санти|милли|микро|нано|пико|фемто|атто|зепто|иокто" //SI down
	].join("|"),

	bitPrefixes: [
		"кило|мега|гига|тера|пета|экса|зетта|йотта"
	].join("|")

}

//useful precalculations
Language.prefixesRE = new RegExp("^(?:" + [Language.prefixes, Language.foreignPrefixes, Language.siPrefixes, Language.bitPrefixes].join("|") + ")", "ig");


/**
* Linguistics classes
*/

/**
* Verb - creates a verb object based on infinitive passed. If none passed - populates random verb. 
* examples: делать, обижать, собираться, писать
*/
function Verb(infinitive, options){
	this.infinitive = infinitive;

	this.options = extend(options || {}, this.defaults);

	this.conjugation = this.getConjugation(this.infinitive);
};

Verb.prototype = {
	//default settings for every verb instance
	defaults: {

	},

	pattern: /{{ preposition }}{{ base }}{{ ending }}/,

	getConjugation: function(infinitive){		
		//test 2 conjugation exceptions
		infinitive.match(/блестеть болеть велеть вертеть видеть висеть глядеть гореть греметь гудеть гундеть дудеть зависеть звенеть зреть зудеть кипеть кишеть коптеть корпеть кряхтеть лететь ненавидеть обидеть пыхтеть свербеть свиристеть свистеть сидеть сипеть скорбеть скрипеть смердеть смотреть сопеть тарахтеть терпеть храпеть хрустеть шелестеть шипеть шуметь/)
		infinitive.match(/бренчать брюзжать бурчать верещать визжать ворчать гнать дребезжать дышать держать дрожать жужжать журчать звучать кричать лежать молчать мчать мычать пищать рычать слышать спать стучать торчать трещать урчать фырчать шуршать шкварчать/)
		infinitive.match(/стоять бояться/)

		//test 2 conjugation ending
		infinitive.match(/ить/)

		//test 1 conjugation exceptions
		infinitive.match(/брить стелить почить зиждиться бить вить лить пить шить гнить жить зыбить/)

		//test 1 conjugation postfix
		infinitive.match(/еть ать оть уть ять ыть ть/)
	},

	/*infinitive: "делать",

	time: делал/делает/делать, люблю/любим/любишь/любите/любит/любят|любить|любил/любили/любила/любило

	person: делаю, делаешь, делает

	plurality: делает, делают

	perfect: делать/сделать, решать/решить, переписывать/переписать, прыгать/прыгнуть

	transitive (requires object)
	reflective: делает, делается

	passive: делает, делан

	conjugation: 1/2 строют, строят

	declination: indicative делаю, imperative делай/делайте/буду/будем/будь/будьте, subjunctive: бы делал

	gender & impersonal: темнееет, смеркалось, смеркается, нездоровится, сделано


	*/


	//forming methods
	gerund: function(){

	},

	participle: function(){

	},

	//return based on settings pasesd
	get: function(options){
		var result = this.base
	},

	populate: function(){
		
	},

	//return string representation based on current opions
	toString: function(){

	}
}




/**
* Noun
* Generates noun forms based on any base passed.
* If none passed - generates random base.
*/
//TODO: ignore foreign non-declinable words
function Noun(nominative, options){
	this.options = extend(options || {}, this.defaults);

	this.nominative = nominative.trim();

	this.prefixes = this.parsePrefixes();

	this.ending = this.parseEnding();

	this.base = this.nominative.slice(this.prefixes.join("").length, -this.ending.length || this.nominative.length)

	this.gender = this.parseGender();

	this.declination = this.parseDeclination(this.base, this.gender);
}

Noun.caseNames = "nominative genitive dative accusative instrumental prepositional".split(" ")

//parse lists: -[а-яА-ЯёЁйЙ/]*(?:-[а-яА-ЯёЁйЙ/]{0,4}){0,2}\b

Noun.suffixes = {[
	end: [
		"алей|анин|янин|арь|и?тель|лк|льник|льщик|ник|чик|щик",
		"ак|ан|ян|ар|ач|есть|ость|ец|ик|ин|х|ун"
	].join("|"),
	mid: [
		"адь|ение?|от|ет|изн|иц|к|л|ние?|от",
		"е?ств|льщиц|ниц|чиц"
	].join("|")
}

Noun.postfixes = {
	//NOTE: every female ending is 
	female: "а|ба|ква|да|жа|ака|вка|бавка|бивка|плавка|правка|ставка|травка|тушевка|дневка|авка|вка|евка|авка|ёвка|ивка|шивка|молвка|овка|увка|ывка|явка|вка|кладка|садка|разведка|ездка|кидка|водка|рядка|дка|ека|ёка|ика|ника|ика|бойка|валка|клейка|мойка|стройка|ка|ака|рубка|бка|вна|ёна|ина|ина|ина|ина|ина|ина|ина|ина|ина|чина|шина|ев/ёвщина|овщина|инщина|щина|а|а|ида|ива|мба|нда|йда|да|жа|ландка|тека|физика|динамика|механика|техника|статика|пластика|ика|ника|тика|стика|тика|стика|ика|ка|ака|ивка|овка|ировка|грамма|дерма|плазма|хима|машина|ина|ина|ина|камера|сфера|спора|ура|фа|э|а|ава|ева|ива|ва|га|да|ода|рда|уда|за|жка|глазка|мазка|резка|возка|грузка|вязка|зка|йка|лка|лка|мка|имка|манка|анка|енка|ёнка|инка|онка|унка|ынка|юнка|янка|ока|цепка|клёпка|сыпка|пка|рка|ска|тка|нтка|работка|отка|ртка|стка|утка|ытка|ятка|ука|цка|чка|шка|ыка|ька|юка|яка|ла|ферма|ма|зна|на|па|ура|юра|ра|са|та|ха|ца|ча|ша|ща|я|анархия|гамия|графия|кефалия|цефалия|копия|логия|мания|метрия|скопия|софия|терапия|типия|томия|трофия|ургия|фобия|фония|химия|ия|зия|мия|ния|рия|сия|тия|стия|ция|ия|йя|ля|ья|Ь",

	//NOTE: every male ending is 0consonant
	//NOTE: exceptions: ь, а, я, й
	male: "б|гиб|люб|слив|ив|лов|слов|рыв|бег|жиг|жог|ног|рог|лог|г|д|клад|пад|сад|вед|ед|завод|провод|отвод|вод|вод|поезд|езд|зд|пряд|ряд|брод|город|род|род|ход|ход|гляд|плод|д|ж|ёж|рез|воз|хоз|з|ш|щ|б|мб|фоб|руб|ив|лог|фаг|ург|нг|г|ид|нд|д|рд|д|аж|ж|оз|генез|з|з|изм|граф|ф|ш|Й|й|тай|ай|бай|ай|дей|тей|ей|ей|ей|ей|чей|ей|ий|бой|ой|стой|уй|й|ай|ей|ей|терий|ций|ий|ий|ой|уй|а|ь|я|я",

	neuter: "Е|е|ие|действие|делие|кровие|любие|мыслие|началие|образие|плодие|подобие|правие|родие|сердие|силие|словие|умие|думие|разумие|шествие|ие|ствие|звание|авание|евание|ивание|ование|обувание|дувание|ывание|ание|ведение|видение|владение|вождение|падение|прядение|строение|овение|влечение|ключение|лечение|речение|сечение|течение|учение|чение|вещение|вращение|мещение|ощущение|ращение|щение|положение|снабжение|жение|рождение|хождение|ждение|бление|управление|вление|мление|пление|воление|деление|мысление|мышление|числение|полнение|умение|разумение|творение|ение|деяние|лияние|стояние|яние|летие|ние|битие|бытие|верие|властие|гласие|житие|крытие|литие|приятие|речие|сердечие|страстие|стие|тие|нятие|ятие|тие|ие|ице|це|хранилище|ще|овье|нье|ье|ьё|е|е|ие|ирование|ье|о|ено|ло|ло|ло|ство|то|цо|цо|цо|чко|шко|о|ло",

	plural: "и|ы|а|я|жа|ча|ша|е|ия|ие|ья|о|ья|ь|Е|ие|ое|е"
}

/**
* wildcards-based approach
* for every word's ending there is special cases of endings
* Exceptions: 
* сани, евреи
*/
Noun.cases = {
	female: {
		"*а": "и е у ой|ою е".slice(" "), //доска, работа
		"*я": "и е ю ей е".slice(" "), //пакля, капля
		"*ь": "и и ь ью и".slice(" "), //лень, сечь
		"*ия": "ии ии ию ией ии".slice(" "), //мания, лоботомия
	},

	male: {

	},

	neuter: {
		"*я": "ени ени я енем и".slice(" "), //вымя, бремя, семя
		"*о": "а у о ом е".slice(" "), //забрало, начало
		"*е": "я ю е ем е".slice(" "), //настроение, варенье
	},

	plural: {
		"*я": "ев ям ев ями ях".slice(" "), //полозья, деревья
		"*ки": "ов".slice(" "), //мужики, каблуки, голубки
		"*ы": //трусы, штаны, усы
		"*и": "ев ".slice(" ")//евреи
	}
	"*ая":
	"*яя":
	"*ое":
	"*ее":
	"*ый":
}

Noun.plurals = {

}

Noun.prototype = {
	defaults: {
		"case": 0,
		plurality: false, //множ или ед
		isName: false, //нарицательное или имя собс
		animate: false //одушевленное или неодушевленное
	},

	//returns list of prefixes
	parsePrefixes: function(){
		var prevWord = "", word = this.nominative, prefixes = [];
		while (true){
			prevWord = word;
			word = word.replace(Language.prefixesRE, "");
			if (prevWord == word) break;
			prefixes.push(prevWord.slice(prevWord.length - word.length))
		}
		return prefixes;
	},

	//return ending
	//TODO: convert to defininf suffixes
	parseEnding: function(){
		var word = this.nominative,
			last = word[word.length - 1],
			last2 = word.slice(-2);

		if (/ая|яя|ое|ее|ый|ия/.test(last2)){
			return last2
		} else if (/а|я|о|е|ь|и|ы|а/.test(last)){
			return last;
		} else {
			return "";
		}
	},

	//parse declination as in rules of ru language
	parseDeclination: function(){
		var last = this.base.length - 1;

		switch (this.base[last]){
			case "о":
				break;
			case "a":
			case "я":
				return 2;
		}
	},

	//returns gender. 0-neuter, 1-male, 2-female
	parseGender: function(){
		var last1 = this.base[this.base.length - 1],
			preLast1 = this.base[this.base.length - 2],
			last2 = this.base.slice(-2),
			last3 = this.base.slice(-3),
			first1 = this.base[0];

		//TODO: isolate name nouns

			//neuter: село, масло, море, умение
			if("о" === last1 || "е" === last1){
				return 0
			}
			//neuter: бремя, время, вымя, имя, знамя, пламя, племя, семя, стремя, темя
			else if("мя" === last2){
				return 0
			}
			else if("тя" === last2){
				return 0
			}

			//female: холодная вода, сухая земля, прямая линия
			else if("а" === last1 || "я" === last1){
				return 2
			}
			//female: рожь, мышь, ночь, помощь.
			else if("ь" === last1 && Language.consonants.sibiliant.indexOf(preLast1) >= 0){
				return 2
			}

			//male: солдат, лес, герой, край;
			else if(Language.consonants.sibiliant.indexOf(first1) >= 0 && this.ending === ""){

			}

	},

	//returns ending according to the base and case passed
	parseEnding: function(){
		return "ок"
	},


	//return string based on instance options
	toString: function(options){
		var c = options && options["case"] || this.options.case
		var result = this.base + this.ending;
		return result;
	},


}

I.noun = function(base){
	return new Noun(base);
}

I.filters.case = function(noun, targetCase){
	if (!noun instanceof Noun) {
		throw new Error("non-noun passed to case filter")
	}

	if (typeof targetCase == "number" && targetCase < Noun.cases.length){
		noun.options["case"] = targetCase;
	} else {
		noun.options["case"] = Noun.cases.indexOf(targetCase);
	}

	return noun;
}